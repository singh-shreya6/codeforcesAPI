{"version":3,"sources":["api-enm.js","problem.js","problems.js","problemsByTag.js","index.js","maxresdefault.jpg"],"names":["API_ENM","PROBLEM_URL","PROBLEMS_UNAVAILABLE","Problem","problem","this","props","isEmpty","contestId","get","index","url","toString","problemName","react_default","a","createElement","href","target","rel","createProblemLink","React","Component","Problems","options","problems","problemSet","i","push","src_problem","problemIndex","allFilteredProblems","filter","forEach","isPageOpen","createProblemTable","className","createTableBasedOnIndex","Fragment","ProblemsByTag","problemTag","tags","includes","isClicked","createTableBasedOnTag","Home","_React$Component","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","setState","_this2","Navbar","bg","variant","Brand","Nav","activeKey","onSelect","e","changePageSelected","Item","Link","eventKey","_this3","Card","style","width","Img","src","maxresdefault","Body","Title","Text","Button","onClick","handleClick","src_problems","problemsByTag","createNavBarView","createTagsCardView","getTrackView","createTagView","_this4","document","title","fetch","then","results","json","data","ReactDOM","render","src_Home","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b761cc1c.chunk.js","sourcesContent":["const API_ENM = {\r\n    PROBLEM_URL : \"https://codeforces.com/problemset/problem/\",\r\n    PROBLEMS_UNAVAILABLE : \"NO PROBLEMS AVAILABLE\"\r\n};\r\n\r\nexport default API_ENM;","import React from 'react';\r\nimport get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport API_ENM from './api-enm';\r\n\r\nclass Problem extends React.Component {\r\n    createProblemLink() {\r\n        const problem = this.props.problem;\r\n        if (!isEmpty(problem)) {\r\n            const contestId = get(problem, 'contestId', 1);\r\n            const index = get(problem, 'index', \"A\");\r\n            const url = API_ENM.PROBLEM_URL + contestId.toString() + \"/\" + index.toString();\r\n            const problemName = get(problem, 'name', \"\");\r\n            return (\r\n                <a href={url} target=\"_blank\" rel=\"noopener noreferrer\"> \r\n                    {problemName}\r\n                </a>\r\n            );\r\n        }\r\n        return API_ENM.PROBLEMS_UNAVAILABLE;\r\n    }\r\n    render(){\r\n        \r\n        return (\r\n              <div>\r\n                  {this.createProblemLink()}\r\n              </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Problem;","import React from 'react';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport filter from 'lodash/filter';\r\nimport forEach from 'lodash/forEach';\r\nimport Problem from './problem';\r\n\r\nclass Problems extends React.Component {\r\n    createProblemTable() {\r\n        let options = [];\r\n        let problems = this.props.problemSet;\r\n        if (isEmpty(problems)) {\r\n            return options;\r\n        }\r\n        for (let i = 0; i < 10; i++) {\r\n            options.push(\r\n                <Problem\r\n                    problem={problems[i]}\r\n                />)\r\n        }\r\n        return options;\r\n    }\r\n    createTableBasedOnIndex(problemIndex) {\r\n        let options = [];\r\n        let allFilteredProblems = [];\r\n        let problems = this.props.problemSet;\r\n        if (isEmpty(problems)) {\r\n            return options;\r\n        }\r\n        allFilteredProblems = filter(problems, problem => {\r\n            return problem.index === problemIndex;\r\n        });\r\n        forEach(allFilteredProblems, problem => {\r\n            options.push(\r\n                <Problem\r\n                    problem={problem}\r\n                />);\r\n        });\r\n        return options;\r\n    }\r\n    render() {\r\n        if (this.props.isPageOpen === \"0\") {\r\n            return (\r\n                <div>\r\n                    <h2>PROBLEMSET</h2>\r\n                    <h3>10 Latest Problems</h3>\r\n                    <br />\r\n                    {this.createProblemTable()}\r\n                    <br />\r\n                </div>\r\n\r\n            );\r\n        } else if (this.props.isPageOpen === \"1\") {\r\n            return (\r\n                <div className=\"a_problems\">\r\n                    <h2>PROBLEMSET</h2>\r\n                    <br />\r\n                    <h3>All A problems</h3>\r\n                    <br />\r\n                    {this.createTableBasedOnIndex('A')}\r\n                </div>\r\n            );\r\n        } else if (this.props.isPageOpen === \"2\") {\r\n            return (\r\n                <div className=\"b_problems\">\r\n                    <h2>PROBLEMSET</h2>\r\n                    <br />\r\n                    <h3>All B problems</h3>\r\n                    <br />\r\n                    {this.createTableBasedOnIndex('B')}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <> </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Problems;","import React from 'react';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport filter from 'lodash/filter';\r\nimport forEach from 'lodash/forEach';\r\nimport Problem from './problem';\r\n\r\nclass ProblemsByTag extends React.Component {\r\n    createTableBasedOnTag(problemTag) {\r\n        let options = [];\r\n        let allFilteredProblems = [];\r\n        let problems = this.props.problemSet;\r\n        if (isEmpty(problems)) {\r\n            return options;\r\n        }\r\n        allFilteredProblems = filter(problems, problem => {\r\n            return problem.tags.includes(problemTag)\r\n        });\r\n        forEach(allFilteredProblems, problem => {\r\n            options.push(\r\n                <Problem\r\n                    problem={problem}\r\n                />);\r\n        });\r\n        return options;\r\n    }\r\n    render() {\r\n        if (this.props.isClicked === true) {\r\n            return (\r\n                <div>\r\n                    <h3>Explore Problems</h3>\r\n                    <br />\r\n                    <br />\r\n                    {this.createTableBasedOnTag('binary search')}\r\n                    <br />\r\n                </div>\r\n            );\r\n        } else{\r\n            return (<div></div>);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ProblemsByTag;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './api-enm';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport get from 'lodash/get';\r\nimport Problems from './problems';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport maxresdefault from './maxresdefault.jpg';\r\nimport ProblemsByTag from './problemsByTag';\r\n\r\nexport class Home extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tproblemSet: {},\r\n\t\t\tisPageOpen: \"\",\r\n\t\t\tisClicked: false\r\n\t\t};\r\n\t}\r\n\r\n\tchangePageSelected(a) {\r\n\t\tthis.setState({\r\n\t\t\tisPageOpen: a,\r\n\t\t\tisClicked: false\r\n\t\t});\r\n\t}\r\n\r\n\thandleClick() {\r\n\t\tthis.setState({\r\n\t\t\tisClicked: true\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tcreateNavBarView() {\r\n\t\treturn (\r\n\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\r\n\t\t\t\t<Navbar.Brand href=\"/\">Online Judge</Navbar.Brand>\r\n\t\t\t\t<Nav activeKey={this.state.isPageOpen} onSelect={e => this.changePageSelected(e)}>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey=\"0\" href=\"#home\">\r\n\t\t\t\t\t\t\tTop 10\r\n        \t\t\t</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey=\"1\" href=\"#trackA\">\r\n\t\t\t\t\t\t\tTrack A\r\n        \t\t\t</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey=\"2\" href=\"#trackB\" >\r\n\t\t\t\t\t\t\tTrack B\r\n        \t\t\t</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Navbar>\r\n\t\t);\r\n\t}\r\n\r\n\tcreateTagsCardView() {\r\n\t\tif (this.state.isPageOpen === \"\" && this.state.isClicked === false) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t<h3>Explore Topics</h3>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card__body\">\r\n\t\t\t\t\t<Card style={{ width: '20%' }}>\r\n\t\t\t\t\t\t<Card.Img variant=\"top\" src={maxresdefault} />\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<Card.Title>Binary Search</Card.Title>\r\n\t\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t\tBinary Search is a search algorithm that finds the position of a target value within a sorted array.\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={() => this.handleClick()}>Start Solving!</Button>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tgetTrackView() {\r\n\t\treturn (\r\n\t\t\t<Problems\r\n\t\t\t\tproblemSet={this.state.problemSet}\r\n\t\t\t\tisPageOpen={this.state.isPageOpen}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\tcreateTagView() {\r\n\t\treturn (\r\n\t\t\t<ProblemsByTag\r\n\t\t\t\tproblemSet={this.state.problemSet}\r\n\t\t\t\tisClicked={this.state.isClicked}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"code_body\">\r\n\t\t\t\t{this.createNavBarView()}\r\n\t\t\t\t{this.createTagsCardView()}\r\n\t\t\t\t{this.getTrackView()}\r\n\t\t\t\t{this.createTagView()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tdocument.title = \"Codeforces API\";\r\n\t\tfetch('https://codeforces.com/api/problemset.problems')\r\n\t\t\t.then(results => {\r\n\t\t\t\treturn results.json();\r\n\t\t\t}).then(data => {\r\n\t\t\t\tconst problems = get(data, 'result.problems', {});\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tproblemSet: problems\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t}\r\n}\r\n\r\nReactDOM.render(\r\n\t<Home />,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/maxresdefault.32dba969.jpg\";"],"sourceRoot":""}